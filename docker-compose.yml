version: '3.8'

services:
  # Frontend Service (React or Angular)
  frontend:
    build:
      context: ./frontend  # Path to the frontend directory (React or Angular)
    container_name: registration_frontend
    ports:
      - "5173:5173"  # Expose frontend app on port 5173
    networks:
      - frontend-backend-network
    depends_on:
      - backend  # Ensure frontend waits for backend

  # Backend Service (Spring Boot)
  backend:
    build:
      context: ./backend/registration-form  # Correct path to Dockerfile
    container_name: registration_backend
    ports:
      - "8080:8080"  # Expose backend app on port 8080
    networks:
      - frontend-backend-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/registration_form  # Use MySQL container name
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: "@Coding1@"  # Database password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update  # Hibernate auto update schema
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect  # Hibernate dialect for MySQL 8
    depends_on:
      - mysql  # Ensure backend waits for MySQL to be ready

  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: "@Coding1@"  # Root password for MySQL
      MYSQL_DATABASE: registration_form  # Database name to be created
    ports:
      - "3306:3306"  # Expose MySQL on port 3306
    networks:
      - frontend-backend-network  # Share the same network with frontend and backend

networks:
  frontend-backend-network:
    driver: bridge  # Bridge network for communication between frontend, backend, and MySQL

